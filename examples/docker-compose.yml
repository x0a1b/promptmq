version: '3.8'

services:
  promptmq:
    image: promptmq:latest
    container_name: promptmq
    restart: unless-stopped
    ports:
      - "1883:1883"   # MQTT TCP
      - "8080:8080"   # MQTT WebSocket
      - "9090:9090"   # Metrics/Health
    volumes:
      - ./production.yaml:/etc/promptmq/config.yaml:ro
      - promptmq-data:/var/lib/promptmq/data
      - promptmq-wal:/var/lib/promptmq/wal
    environment:
      - PROMPTMQ_LOG_LEVEL=info
      - PROMPTMQ_LOG_FORMAT=json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '2'
        reservations:
          memory: 512M
          cpus: '1'

  # Prometheus monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: promptmq-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - promptmq

  # Grafana dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: promptmq-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  promptmq-data:
    driver: local
  promptmq-wal:
    driver: local
  prometheus-data:
    driver: local  
  grafana-data:
    driver: local

networks:
  default:
    name: promptmq-network